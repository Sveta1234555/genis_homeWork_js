//----------------------------
//----------------------------
// ja mod23
// - массивы циклы
//----------------------------
//----------------------------

// //----------------------------
// //----------------------------
// //области видимости
// //----------------------------
// //----------------------------

// // //нельзя вызывать функцию или константу (а переменную?) до того, как она объявлена
// // console.log(a);     //Error Uncaught ReferenceError: can't access lexical declaration 'a' before initialization
// //     //вызвали пееременную перед ее инициализацией
// // const a = 5;
// // console.log(a);


// //области видимости - доступность в любом месте кода
// // есть несколько областей видимости.
// // 1. глобальная - сверху всех функций, в самом начале объявляется
// // 2. любая конструкция с фигурными скобками  { } создает свою область видимости.и все const, let юудут доступны только в рамках этих скобок


// const a = 5;
// console.log("GLobal", a);       //ok   GLobal 5



// if (true) {
//     // console.log("Block", а);  //ok   Block 5  - ок, т.к. объявили над {}, выше
//     const b = 10;
//     console.log("Block b", b);   //Block b 10
// };

// console.log("GLobal b", b);   //err  "Uncaught ReferenceError: b is not defined"


//----------------------------
//----------------------------
//Цикли
//----------------------------
//----------------------------

// while

// do while

// for
//    break && continue

// //----------------------------
// // while (условие ) { тело цикла. итерации (одновыполнение шага)}
// // while () {}
// //----------------------------

// let a = 0;
// while (a < 5) {
//     // a + 1;
//     a++;        //это a+1
//     console.log("a",a);
// }

// let a = 3;
//// Условие (a)  - это и есть условие a>0. т.к. a=0 - это false Всегда. В условии цикла идет проверка true - false
// alert(a > 0);       //true
// alert(a == 0);      //false

// while (a) {
//     console.log("a", a);
//     a--;
// }

// let a = 3;
// //можно писать в одну строку цикл
// while (a) { console.log("a", a--); }

//  let a = 3;
// // и если ОДНО действие в цмкле - без фигурных скобок!!!---------------------------------
// while (a) console.log("a", a--);   //также отрабатывает



// //----------------------------
// // // do while  { тело цикла , итерации (одновыполнение шага)} ...(условие );
// // do { тело } while (условие)
// //----------------------------
// //06:30мин
// // do while -  сначала выполняется, потом проверяется условие
// // while - было наоборот, сначала проверяется условие, потом выполняется тело цикла


//   let a = 0;
// do {
//     console.log(a);
//     a++;
// } while (a < 5);




//----------------------------
// // for{ тело цикла , итерации (одновыполнение шага)}
//----------------------------
//07:25мин
//перебор аргументов

// for (let a = 0;  // объявление и назначений начального значения аргумента;
//     i < 3; //условие
//     a++  //изменение аргумента
// )
//     {
//     тело - действия
// }
    
// for (let a = 0; a < 3; a++) {
//        console.log(a);
// }
// //0 1 2

// // а можно объявить раньше цикла
// let a = 0;

// // внутри условия цикла for в первой позиции -
// //     1.можно переназначить аргумент a,
// for (a = 1; a < 3; a++) {
//         console.log(a);
// }
// // 1 2
        
// //     // 2. можно воббще ничего не писать, но точку с запятой поставить
// let a = 0;
// for (; a < 3; a++) {
//     console.log(a);
// }
// //0 1 2

//     // 3. можно перенести наращивание- изменение аргумента  внутрь фигурных скобок {}, в тело цикла
//     // но - 2 точки с запятой в круглых скобках аргументов- условий должны быть:
// let a = 0;
// for (; a < 3;) {
//     a++;
//     console.log(a);
// }
// // 1 2 3            //внимание - с 1. сначала 0+1 =1.... Ну да - сначала же a++ а потом вывод

    
// //----------------------------
// //    break && continue
// //----------------------------
// //09:12мин
// // прервать выполнение цикла


// //    break------------------------------------------
// //----------------------------
// // пример.Задача -получать от пользователя цифры, пока не нажмет "отмена"

// let summ = 0;
// while (true) {
//     let value = +prompt("Введите число");
//     if (!value) break;

//     summ += value;  //summ = summ + value

//     // // //более длинный аналог summ += value; :
//     // let i = summ + value;
//     // summ = i;

//     // //так тоже работает!!!
//     // summ = summ + value;

// }

// console.log("Summ=",summ);      //  нажимали в каждом prompt 1 2 3   результат  Summ= 6


// // + перед prompt,!!!!! new-------------- иначе - конкатенация вводов
// // + перед prompt,!!!!! чтобы не было конкатенации строчек ввода
// //пример без + перед prompt
// let summ = 0;
// while (true) {
//     let value = prompt("Введите число");
//     if (!value) break;
//     summ += value;  //summ = summ + value
// }
// console.log("Summ=",summ);   //нажимали в каждом prompt 1 2 3   - результат: Summ= 0123


//if (!value) break;   new ---------------- прервать цикл  по esc при вводе с prompt
//if (!value) break;  если значение не true , не - это!.
    // "!value" в условии -  это означает нажали "отмена"!!!!
    //      т.к. когда нажимают "Отмена" - получаем false


// //---------- if (!value) break;   так прерывать цикл по отмене пользователем. Esc из alert, например. ИЛи кнопка ОТмена в prompt.apply


// // //    continue-----------------------------------------
// // //----------------------------
// // //11:40мин
// // continue - это облегченный break
// //      не прерывает весь цикл
// //      прерывает текущий шаг и продолжает цикл на следующем шаге и значении аргумента

// //пример - вывести нечетные. (остаток от деления на 2 <>0)
// for (let i = 0; i < 10; i++) {
//     if (i % 2 === 0) continue;      //четные пропускаем
//     console.log(i);
// }

// //1 3 5 7 9



//----------------------------
//----------------------------
//Масиви
//----------------------------
//----------------------------
// //12:58мин

// набор значений.значений.значений
// Object - ненужен, там key и значение. Надо просто набор значений одномерный
// прим - перечислить фрукты
